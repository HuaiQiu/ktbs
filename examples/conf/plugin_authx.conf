[plugins]
authx = true

[authx]
oauth_flow = oauth_github  ; this MUST be the name of a section that exists in this file
; enable_beaker = true  ; this should be set to True, unless you already have a beaker SessionMiddleware on your middleware stack
;
; Session options
;
; Here is an example if you want to use SQLite to store your sessions,
; you must change PATH_TO_A_WRITABLE_DIRECTORY and PATH_TO_THE_SQLITE_DB
; to suitable values for your system.
; beaker.session.type = ext:database
; beaker.session.url = sqlite:///%(sqlite_path)s  ; this sould not be changed, it is just a convenient way to set the database url
; beaker.session.lock_dir = PATH_TO_A_WRITABLE_DIRECTORY
; sqlite_path = PATH_TO_THE_SQLITE_DB
;
; You should use signature and encryption for session storage
; beaker.session.secret = YOUR_RANDOM_SECRET_HERE
; beaker.session.encrypt_key = YOUR_RANDOM_ENCRYPTION_KEY_HERE
; beaker.session.validate_key = YOUR_RANDOM_VALIDATE_KEY_HERE
;
; The session defaults are:
;beaker.session.type = memory


; Claroline Connect for authentication
; Note: you MUST replace the following in this section:
; CLACO_AUTH_ENDPOINT, CLACO_ACCESS_TOKEN_ENDPOINT, CLACO_API_ENDPOINT,
; YOUR_CLIENT_ID, YOUR_CLIENT_SECRET, CLACO_REDIRECT_URI
[oauth_claco]
auth_endpoint = CLACO_AUTH_ENDPOINT?client_id=%(client_id)s&redirect_uri=%(redirect_uri)s&response_type=code
access_token_endpoint = CLACO_ACCESS_TOKEN_ENDPOINT?client_id=%(client_id)s&client_secret=%(client_secret)s&grant_type=authorization_code&redirect_uri=%(redirect_uri)s
api_endpoint = CLACO_API_ENDPOINT
client_id = YOUR_CLIENT_ID
client_secret = YOUR_CLIENT_SECRET
redirect_uri = CLACO_REDIRECT_URI


; Github for authentication
; Note: you MUST replace the following in this section: YOUR_CLIENT_ID, YOUR_CLIENT_SECRET
[oauth_github]
auth_endpoint = https://github.com/login/oauth/authorize?client_id=%(client_id)s
access_token_endpoint = https://github.com/login/oauth/access_token
api_endpoint = https://api.github.com/user
client_id = YOUR_CLIENT_ID
client_secret = YOUR_CLIENT_SECRET


; Uncomment the following section if you wish to have an admin login
; via IP whitelisting and credentials
; [authx_admin]
; ip_whitelist = 127.0.0.1  ; List of IP separated by spaces
; login = admin
; password = thisissecret

[logging]
loggers = ktbs
console-level = DEBUG
